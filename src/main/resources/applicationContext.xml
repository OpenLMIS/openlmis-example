<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:int-jdbc="http://www.springframework.org/schema/integration/jdbc"
       xmlns:int="http://www.springframework.org/schema/integration"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.1.xsd
                           http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.1.xsd
                           http://www.springframework.org/schema/integration http://www.springframework.org/schema/integration/spring-integration.xsd
                           http://www.springframework.org/schema/integration/jdbc http://www.springframework.org/schema/integration/jdbc/spring-integration-jdbc.xsd">

  <context:annotation-config/>
  <context:spring-configured/>

  <context:component-scan base-package="org.openlmis.example"/>

  <int:channel id="inputChannel">
    <int:dispatcher/>
  </int:channel>

  <int-jdbc:inbound-channel-adapter channel="inputChannel"
                                    data-source="openlmisDataSource"
                                    query="SELECT * FROM example.notifications WHERE sent = false OR sent IS NULL"
                                    row-mapper="notificationRowMapper"
                                    max-rows-per-poll="${mail.notification.rows.per.poll}"
                                    update="UPDATE notifications SET sent = true WHERE id IN (:id)"
                                    update-per-row="true">
    <int:poller fixed-rate="${mail.notification.polling.rate}">
      <int:transactional/>
    </int:poller>
  </int-jdbc:inbound-channel-adapter>

  <int:service-activator input-channel="inputChannel" ref="notificationService" method="processNotifications"/>

  <bean id="openlmisDataSource" class="org.postgresql.ds.PGPoolingDataSource" destroy-method="close">
    <property name="serverName" value="db"/>
    <property name="databaseName" value="open_lmis"/>
    <property name="user" value="${spring.datasource.username}"/>
    <property name="password" value="${spring.datasource.password}"/>
  </bean>

</beans>